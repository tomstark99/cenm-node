networkServices = {
    doormanURL = "http://127.0.0.1:10000"
    networkMapURL = "http://127.0.0.1:20000"
}

dataSourceProperties = {
    dataSource = {
        password = "ziAscD0MJnj4n4xkFWY6XuMBuw9bvYC7"
        url = "jdbc:h2:file:./h2/node-persistence;DB_CLOSE_ON_EXIT=FALSE;WRITE_DELAY=0;LOCK_TIMEOUT=10000"
        user = "sa"
    }
    dataSourceClassName = "org.h2.jdbcx.JdbcDataSource"
}

devMode = false

cordappSignerKeyFingerprintBlacklist=[]

myLegalName = "O=TestNode, L=London, C=GB"
p2pAddress = "127.0.0.1:60011"

messagingServerAddress = "127.0.0.1:11005"
messagingServerExternal = true

useTestClock = false
enterpriseConfiguration = {
    externalBridge = true
    messagingServerConnectionConfiguration = "CONTINUOUS_RETRY"
    messagingServerBackupAddresses = ["localhost:11005"]
    mutualExclusionConfiguration = {
        on = true
        updateInterval = 20000
        waitInterval = 40000
    }
    messagingServerSslConfiguration = {
        sslKeystore = artemis/artemis.jks
        keyStorePassword = artemisStorePass
        trustStoreFile = artemis/artemis-truststore.jks
        trustStorePassword = artemisTrustpass
    }
}

rpcSettings = {
    address = "127.0.0.1:60012"
    adminAddress = "127.0.0.1:60013"
}

rpcUsers = [
    {
        username = "testuser"
        password = "password"
        permissions = [ALL]
    }
]

sshd = {
    port = 2230
}
